Even/Odd number
1.)
  (i)  2 bits
  (ii) 1 bit
2.)   Map States
	00 - 0 even, 1 even
	01 - 0 odd, 1 even
	10 - 0 odd, 1 odd
	11 - 0 even, 1 odd
      
	  Map Inputs
	0
	1
3.)
S1	S0	in	|	n1	n0	
0	0	0	|	0	1
0	0	1	|	1	1
0	1	0	|	0	0
0	1	1	|	1	0
1	0	0	|	1	1
1	0	1	|	0	1
1	1	0	|	1	0
1	1	1	|	0	0

4.)
n0 --> S0'
n1 --> S1' * in + S1 * in'


Vending Machine
1.)
  (i)  3 bits
  (ii) 2 bits

2.)   Map States
	000 - 0 cents
	001 - 5 cents
	010 - 10 cents
	011 - 15 cents
	100 - 20 cents
	101 - 25 cents
	110 - Garbage
	111 - Garbage

	  Map Inputs
    00 - Nickel
	01 - Dime
	10 - Quarter
	11 - Invalid
	
3.)
S2	S1	S0	in1	in0	|	n2	n1	n0
0	0	0	0	0	|	0	0	1
0	0	0	0	1	|	0	1	0
0	0	0	1	0	|	1	0	1
0	0	0	1	1	|	1	1	0
0	0	1	0	0	|	0	1	0
0	0	1	0	1	|	0	1	1
0	0	1	1	0	|	1	1	0
0	0	1	1	1	|	1	1	0
0	1	0	0	0	|	0	1	1
0	1	0	0	1	|	1	0	0
0	1	0	1	0	|	1	1	0
0	1	0	1	1	|	1	1	0
0	1	1	0	0	|	1	0	0
0	1	1	0	1	|	1	0	1
0	1	1	1	0	|	1	1	0
0	1	1	1	1	|	1	1	0
1	0	0	0	0	|	1	0	1
1	0	0	0	1	|	1	1	0
1	0	0	1	0	|	1	1	0
1	0	0	1	1	|	1	1	0
1	0	1	0	0	|	1	1	0
1	0	1	0	1	|	1	1	0
1	0	1	1	0	|	1	1	0
1	0	1	1	1	|	1	1	0
1	1	0	0	0	|	1	1	0
1	1	0	0	1	|	1	1	0
1	1	0	1	0	|	1	1	0
1	1	0	1	1	|	1	1	0
1	1	1	0	0	|	1	1	0
1	1	1	0	1	|	1	1	0
1	1	1	1	0	|	1	1	0
1	1	1	1	1	|	1	1	0

4.)
n2 --> in1 + (S1 * in0) + (S1 * S0) + S2
n1 --> (S1' * in0) + (S1' * S0) + (S1 * S0' in0') + (S1 * in1) + (S2 * in1) + (S2 * S1)
n0 --> (S2' * S1' * S0' * in0') + (S2' * S0' * in1' * in2') + (S1' * S0' * in1' * in0') + (S2' * S0 * in1' * in0)
